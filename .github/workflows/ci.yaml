name: CI flow
on:
  pull_request:
    branches: main
    types:
      - opened
      - reopened
      - closed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      node: ${{ steps.read.outputs.node }}
      pnpm: ${{ steps.read.outputs.pnpm }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Node and pnpm versions from package.json
        id: read
        run: |
          NODE_VERSION=$(jq -r '.engines.node // "18"' package.json | tr -d '>=<^~ ')
          PNPM_VERSION=$(jq -r '.engines.pnpm // "8"' package.json | tr -d '>=<^~ ')
          echo "node=$NODE_VERSION" >> $GITHUB_OUTPUT
          echo "pnpm=$PNPM_VERSION" >> $GITHUB_OUTPUT

  checks:
    name: Code quality check
    needs: setup
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.node }}

      - name: Execute Checks
        run: |
          pnpm i
          pnpm run typecheck
          pnpm run format:check
          pnpm run lint
          pnpm run test
        timeout-minutes: 30

  deploy:
    name: Deploy changes to GitHub pages
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [setup, checks]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ needs.setup.outputs.node }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ needs.setup.outputs.pnpm }}

      - name: Build
        run: |
          pnpm i
          pnpm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "./dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
